import java.util.regex.Pattern;
import java.util.regex.Matcher;

public class Handler {
	private String[] dates;
	private double[][] values;
	private int length;
	private final String validDate= "(201[0-9])-((((0[13578]|1[02])-(0[1-9]|[1-2][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[1-2][0-9]|30)))|02-(0[0-9]|1[0-9]|2[0-8]))";
	
	/**
	 * Konstruktor som tar emot en tuple av egen design för att hantera listan med värden
	 * @param input
	 */
	public Handler(Tuple<String[], double[][]> input){
		dates = input.getLeft();
		values = input.getRight();
		length= dates.length;
	}
	
	
	/**
	 * dateChecker är en metod för att kontrollera att de datum som gavs i konstruktorn är korrekta
	 * returnerar inget värde, skriver resultatet direkt till konsollen
	 */
	private boolean dateChecker(){
		boolean integrety = true;
		int line = 0;
		String[] previousDate = {"0","0","0"};
		String[] currentDate;
		for(String current:dates){
			line++;
			try{
				String[] temp= current.split("T");
				currentDate= temp[0].split("-");
				
				/*
				 * Stor if stats för att kontrollera för att datumen är korrekta, 
				 * (dvs att februari inte kan ha mer än 28 dagar och att ett år inte kan ha mer än 12 månader)
				 * och att datumen är i stigande ordning (Detta går lätt att ändra)
				 */
				if(
					Pattern.matches(validDate, temp[0]) &&
					(Integer.parseInt(currentDate[0])>=Integer.parseInt(previousDate[0]) &&
					Integer.parseInt(currentDate[1])>=Integer.parseInt(previousDate[1]) &&
					Integer.parseInt(currentDate[2])>Integer.parseInt(previousDate[2])) &&
					Pattern.matches("([0-1][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])Z", temp[1])
				){
					previousDate=currentDate;
					continue;
				}
				
				
				else{
					//Skriver till konsollen som en error line att datum på rad x är inkorrekt formaterat
					System.err.println("Date on line " +line + " is incorrectly formated.");
				}
			}
			catch(IndexOutOfBoundsException e){
				System.err.println("Date on line " +line + " is incorrectly formated.");
			}
			catch(NumberFormatException e){
				System.err.println("Date on line " +line + " is incorrectly formated.");
			}
		}
		System.out.println("Date integrety check complete.");
	}
	
	private boolean valueChecker(){
		
	}
}
